mssql -s sa -p P61

Driver={ODBC Driver 18 for SQL Server};Server=tcp:mysqlserver-nwlogic.database.windows.net,1433;Database=nwlogic;Uid=valhuber;Pwd={your_password_here};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;

Driver={ODBC Driver 18 for SQL Server};Server=tcp:mysqlserver-nwlogic.database.windows.net,1433;Database=nwlogic;Uid=valhuber;Pwd=P61;Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;

    SQLALCHEMY_DATABASE_URI : typing.Optional[str] = f"mssql+pyodbc://valhuber:P61@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"

works for PyCharm:
jdbc:sqlserver://mysqlserver-nwlogic.database.windows.net:1433;database=nwlogic;user=valhuber@mysqlserver-nwlogic;password=P61;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;

valhuber; P61

Login failed for user '<token-identified principal>'. The server is not currently configured to accept this token.
==> Use SqlServer auth (not AD)

ApiLogicServer create --project_name=TVF --extended_builder=* --db_url='mssql+pyodbc://sa:P61@{db_ip}:1433/SampleDB?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no'",

ApiLogicServer create --project_name=Az --db_url="mssql+pyodbc://valhuber:P61@tcp:mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"

ValueError: invalid literal for int() with base 10: 'mysqlserver-nwlogic.database.windows.net:1433'


slow, but works:
ApiLogicServer create --project_name=Az --db_url="mssql+pyodbc://valhuber:P61@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"

SQLALCHEMY_DATABASE_URI : typing.Optional[str] = f"mssql+pyodbc://valhuber:P61@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"


deploy container to Azure

https://docs.docker.com/cloud/aci-integration/

val@Vals-MBP-16 docker_api_logic_project % docker --context myacicontext run -p 5656:5656 docker_api_logic_project
[+] Running 0/1
 â ¿ Group wonderful-snyder  Error                                                                                                                 1.9s
containerinstance.ContainerGroupsClient#CreateOrUpdate: Failure sending request: StatusCode=400 -- Original Error: Code="MoreImageRegistryCredentialsThanContainers" Message="More image registry credentials provided than containers in container group 'wonderful-snyder'."
val@Vals-MBP-16 docker_api_logic_project % 


Create container
================

Try MS doc: https://learn.microsoft.com/en-us/azure/container-instances/quickstart-docker-cli
docker run -p 80:80 mcr.microsoft.com/azuredocs/aci-helloworld
docker run -p 5656:5656 hub.docker.com/repository/docker/apilogicserver/docker_api_logic_project


try: https://learn.microsoft.com/en-us/azure/container-instances/container-instances-quickstart

az container create --resource-group myResourceGroup --name mycontainer --image apilogicserver/docker_api_logic_project:latest --dns-name-label val-demo --ports 5656


https://learn.microsoft.com/en-us/azure/container-instances/container-instances-environment-variables#azure-cli-example
--environment-variables 'NumWords'='5' 'MinLength'='8'
 
az container create --resource-group myResourceGroup --name mycontainer --image apilogicserver/docker_api_logic_project:latest --dns-name-label val-demo --ports 5656 --environment-variables 'FLASK_HOST'='mssql+pyodbc://valhuber:P61@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+17+for+SQL+Server&trusted_connection=no' 'VERBOSE'='True'

mssql+pyodbc://valhuber:P61@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+17+for+SQL+Server&trusted_connection=no

az container delete --resource-group myResourceGroup --name mycontainer

---> look for env variables here

az container show --resource-group myResourceGroup --name mycontainer --image apilogicserver/docker_api_logic_project:latest --dns-name-label val-demo --ports 5656

az container show --resource-group myResourceGroup --name mycontainer --query "{FQDN:ipAddress.fqdn,ProvisioningState:provisioningState}" --out table

run: http://val-demo.eastus.azurecontainer.io:5656 usually works

run: http://val-demo.eastus.azurecontainer.io

az container logs --resource-group myResourceGroup --name mycontainer


Unable to open cmd line to container
====================================

ssh to container: https://learn.microsoft.com/en-us/azure/app-service/configure-linux-open-ssh-session

https://<app-name>.scm.azurewebsites.net/webssh/host

FQDN: val-demo.eastus.azurecontainer.io

https://val-demo.eastus.azurecontainer.io.scm.azurewebsites.net/webssh/host  fails
https://val-demo.io.scm.azurewebsites.net/webssh/host

https://learn.microsoft.com/en-us/azure/app-service/configure-linux-open-ssh-session

ssh root@20.75.149.168 -p 21382  fails


docker_api_logic_project access
===============================

Vals-MBP-16 (x86)

    local / std launch -    yes     api_root: http://localhost:5656/api
    local / env variables - yes

    docker / std -          yes, iff using driver 17 (see Critical, below)
    docker / env variables - ??

14 mac (arm)

    local / std launch -    ?     api_root: http://localhost:5656/api
    local / env variables - Yes

    docker / std -          unable to install Python extension
    docker / env variables -??

Azure Container

    env variables           FAILS


Critical configuration is the pyodbc version
    docker has pyodbc 17, venv has 18, so url fails no driver
    so, to run with venv, activate line 43 in config.py
        to run with docker, use run config ApiLogicServer AZ SQL
            mssql+pyodbc://valhuber:P61@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+17+for+SQL+Server&trusted_connection=no
