mssql -s sa -p Posey3861

Driver={ODBC Driver 18 for SQL Server};Server=tcp:mysqlserver-nwlogic.database.windows.net,1433;Database=nwlogic;Uid=valhuber;Pwd={your_password_here};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;

Driver={ODBC Driver 18 for SQL Server};Server=tcp:mysqlserver-nwlogic.database.windows.net,1433;Database=nwlogic;Uid=valhuber;Pwd=Posey3861;Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;

    SQLALCHEMY_DATABASE_URI : typing.Optional[str] = f"mssql+pyodbc://valhuber:Posey3861@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"

works for PyCharm:
jdbc:sqlserver://mysqlserver-nwlogic.database.windows.net:1433;database=nwlogic;user=valhuber@mysqlserver-nwlogic;password=Posey3861;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;

valhuber; Posey3861

Login failed for user '<token-identified principal>'. The server is not currently configured to accept this token.
==> Use SqlServer auth (not AD)

ApiLogicServer create --project_name=TVF --extended_builder=* --db_url='mssql+pyodbc://sa:Posey3861@{db_ip}:1433/SampleDB?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no'",

ApiLogicServer create --project_name=Az --db_url="mssql+pyodbc://valhuber:Posey3861@tcp:mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"

ValueError: invalid literal for int() with base 10: 'mysqlserver-nwlogic.database.windows.net:1433'


slow, but works:
ApiLogicServer create --project_name=Az --db_url="mssql+pyodbc://valhuber:Posey3861@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"

SQLALCHEMY_DATABASE_URI : typing.Optional[str] = f"mssql+pyodbc://valhuber:Posey3861@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"


deploy container to Azure

https://docs.docker.com/cloud/aci-integration/

val@Vals-MBP-16 docker_api_logic_project % docker --context myacicontext run -p 5656:5656 docker_api_logic_project
[+] Running 0/1
 â ¿ Group wonderful-snyder  Error                                                                                                                 1.9s
containerinstance.ContainerGroupsClient#CreateOrUpdate: Failure sending request: StatusCode=400 -- Original Error: Code="MoreImageRegistryCredentialsThanContainers" Message="More image registry credentials provided than containers in container group 'wonderful-snyder'."
val@Vals-MBP-16 docker_api_logic_project % 


Create container
================

Try MS doc: https://learn.microsoft.com/en-us/azure/container-instances/quickstart-docker-cli
docker run -p 80:80 mcr.microsoft.com/azuredocs/aci-helloworld
docker run -p 5656:5656 hub.docker.com/repository/docker/apilogicserver/docker_api_logic_project


try: https://learn.microsoft.com/en-us/azure/container-instances/container-instances-quickstart

az container create --resource-group myResourceGroup --name mycontainer --image apilogicserver/docker_api_logic_project:latest --dns-name-label val-demo --ports 5656


https://learn.microsoft.com/en-us/azure/container-instances/container-instances-environment-variables#azure-cli-example
--environment-variables 'NumWords'='5' 'MinLength'='8'
 
az container create --resource-group myResourceGroup --name mycontainer --image apilogicserver/docker_api_logic_project:latest --dns-name-label val-demo --ports 5656 --environment-variables 'FLASK_HOST'='val-demo.eastus.azurecontainer.io' 'SQLALCHEMY_DATABASE_URI'='mssql+pyodbc://valhuber:Posey3861@mysqlserver-nwlogic.database.windows.net:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no' 'VERBOSE'='True'

az container delete --resource-group myResourceGroup --name mycontainer

---> look for env variables here

az container show --resource-group myResourceGroup --name mycontainer --image apilogicserver/docker_api_logic_project:latest --dns-name-label val-demo --ports 5656

az container show --resource-group myResourceGroup --name mycontainer --query "{FQDN:ipAddress.fqdn,ProvisioningState:provisioningState}" --out table

run: http://val-demo.eastus.azurecontainer.io:5656 usually works

run: http://val-demo.eastus.azurecontainer.io

az container logs --resource-group myResourceGroup --name mycontainer


Unable to open cmd line to container
====================================

ssh to container: https://learn.microsoft.com/en-us/azure/app-service/configure-linux-open-ssh-session

https://<app-name>.scm.azurewebsites.net/webssh/host

FQDN: val-demo.eastus.azurecontainer.io

https://val-demo.eastus.azurecontainer.io.scm.azurewebsites.net/webssh/host  fails
https://val-demo.io.scm.azurewebsites.net/webssh/host

https://learn.microsoft.com/en-us/azure/app-service/configure-linux-open-ssh-session

ssh root@20.75.149.168 -p 21382  fails

az webapp config set --resource-group myResourceGroup -n val-demo.eastus.azurecontainer.io --remote-debugging-enabled=false

                    "environmentVariables": [
						{
							"FLASK_HOST": "val-demo.eastus.azurecontainer.io"
						},
						{
							"SQLALCHEMY_DATABASE_URI": "mssql+pyodbc://sa:Posey3861@localhost:1433/nwlogic?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"
						}
					],
